{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>city</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>Boston</td>\n",
       "      <td>22</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>Boston</td>\n",
       "      <td>38</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>Boston</td>\n",
       "      <td>25</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>Boston</td>\n",
       "      <td>30</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>Miami</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>Miami</td>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>Miami</td>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>Miami</td>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>Paris</td>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>Paris</td>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>Paris</td>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>Paris</td>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>Houston</td>\n",
       "      <td>82</td>\n",
       "      <td>15</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>Houston</td>\n",
       "      <td>92</td>\n",
       "      <td>20</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>Houston</td>\n",
       "      <td>101</td>\n",
       "      <td>18</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>Houston</td>\n",
       "      <td>98</td>\n",
       "      <td>24</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          day     city  temperature  windspeed   event\n",
       "0  2017-01-01   Boston           22          6    Rain\n",
       "1  2017-01-02   Boston           38          7   Sunny\n",
       "2  2017-01-03   Boston           25         12    Snow\n",
       "3  2017-01-04   Boston           30          7   Sunny\n",
       "4  2017-01-01    Miami           90          5   Sunny\n",
       "5  2017-01-02    Miami           85         12     Fog\n",
       "6  2017-01-03    Miami          100         15     Fog\n",
       "7  2017-01-04    Miami           92          5    Rain\n",
       "8  2017-01-01    Paris           45         20   Sunny\n",
       "9  2017-01-02    Paris           50         13  Cloudy\n",
       "10 2017-01-03    Paris           54          8  Cloudy\n",
       "11 2017-01-04    Paris           42         10  Cloudy\n",
       "12 2017-01-01  Houston           82         15   Sunny\n",
       "13 2017-01-02  Houston           92         20  Cloudy\n",
       "14 2017-01-03  Houston          101         18    Rain\n",
       "15 2017-01-04  Houston           98         24  Cloudy"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_excel(\"weather_cities.xlsx\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>city</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>Miami</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>Miami</td>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>Miami</td>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>Miami</td>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         day   city  temperature  windspeed  event\n",
       "4 2017-01-01  Miami           90          5  Sunny\n",
       "5 2017-01-02  Miami           85         12    Fog\n",
       "6 2017-01-03  Miami          100         15    Fog\n",
       "7 2017-01-04  Miami           92          5   Rain"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city').get_group('Miami')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Boston', 'Houston', 'Miami', 'Paris'])"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city').groups.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>city</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>Miami</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>Miami</td>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>Miami</td>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>Miami</td>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         day   city  temperature  windspeed  event\n",
       "4 2017-01-01  Miami           90          5  Sunny\n",
       "5 2017-01-02  Miami           85         12    Fog\n",
       "6 2017-01-03  Miami          100         15    Fog\n",
       "7 2017-01-04  Miami           92          5   Rain"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.get_group('Miami')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mumbai\n",
      "         day    city  temperature  windspeed  event\n",
      "4 2017-01-01  mumbai           90          5  Sunny\n",
      "5 2017-01-02  mumbai           85         12    Fog\n",
      "6 2017-01-03  mumbai           87         15    Fog\n",
      "7 2017-01-04  mumbai           92          5   Rain\n",
      "new york\n",
      "         day      city  temperature  windspeed  event\n",
      "0 2017-01-01  new york           32          6   Rain\n",
      "1 2017-01-02  new york           36          7  Sunny\n",
      "2 2017-01-03  new york           28         12   Snow\n",
      "3 2017-01-04  new york           33          7  Sunny\n",
      "paris\n",
      "          day   city  temperature  windspeed   event\n",
      "8  2017-01-01  paris           45         20   Sunny\n",
      "9  2017-01-02  paris           50         13  Cloudy\n",
      "10 2017-01-03  paris           54          8  Cloudy\n",
      "11 2017-01-04  paris           42         10  Cloudy\n"
     ]
    }
   ],
   "source": [
    "for city, city_df in gr:\n",
    "    print(city)\n",
    "    print(city_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city\n",
       "Boston      38\n",
       "Houston    101\n",
       "Miami      100\n",
       "Paris       54\n",
       "Name: temperature, dtype: int64"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city')['temperature'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city\n",
       "Boston     27.5\n",
       "Houston    95.0\n",
       "Miami      91.0\n",
       "Paris      47.5\n",
       "Name: temperature, dtype: float64"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city')['temperature'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mumbai</th>\n",
       "      <td>88.50</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>new york</th>\n",
       "      <td>32.25</td>\n",
       "      <td>8.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>paris</th>\n",
       "      <td>47.75</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          temperature  windspeed\n",
       "city                            \n",
       "mumbai          88.50       9.25\n",
       "new york        32.25       8.00\n",
       "paris           47.75      12.75"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">temperature</th>\n",
       "      <th colspan=\"8\" halign=\"left\">windspeed</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mumbai</th>\n",
       "      <td>4.0</td>\n",
       "      <td>88.50</td>\n",
       "      <td>3.109126</td>\n",
       "      <td>85.0</td>\n",
       "      <td>86.50</td>\n",
       "      <td>88.5</td>\n",
       "      <td>90.50</td>\n",
       "      <td>92.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.25</td>\n",
       "      <td>5.057997</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.00</td>\n",
       "      <td>8.5</td>\n",
       "      <td>12.75</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>new york</th>\n",
       "      <td>4.0</td>\n",
       "      <td>32.25</td>\n",
       "      <td>3.304038</td>\n",
       "      <td>28.0</td>\n",
       "      <td>31.00</td>\n",
       "      <td>32.5</td>\n",
       "      <td>33.75</td>\n",
       "      <td>36.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>8.00</td>\n",
       "      <td>2.708013</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.75</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.25</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>paris</th>\n",
       "      <td>4.0</td>\n",
       "      <td>47.75</td>\n",
       "      <td>5.315073</td>\n",
       "      <td>42.0</td>\n",
       "      <td>44.25</td>\n",
       "      <td>47.5</td>\n",
       "      <td>51.00</td>\n",
       "      <td>54.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>12.75</td>\n",
       "      <td>5.251984</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.50</td>\n",
       "      <td>11.5</td>\n",
       "      <td>14.75</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         temperature                                                   \\\n",
       "               count   mean       std   min    25%   50%    75%   max   \n",
       "city                                                                    \n",
       "mumbai           4.0  88.50  3.109126  85.0  86.50  88.5  90.50  92.0   \n",
       "new york         4.0  32.25  3.304038  28.0  31.00  32.5  33.75  36.0   \n",
       "paris            4.0  47.75  5.315073  42.0  44.25  47.5  51.00  54.0   \n",
       "\n",
       "         windspeed                                                 \n",
       "             count   mean       std  min   25%   50%    75%   max  \n",
       "city                                                               \n",
       "mumbai         4.0   9.25  5.057997  5.0  5.00   8.5  12.75  15.0  \n",
       "new york       4.0   8.00  2.708013  6.0  6.75   7.0   8.25  12.0  \n",
       "paris          4.0  12.75  5.251984  8.0  9.50  11.5  14.75  20.0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gr.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>city</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>new york</td>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>new york</td>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>new york</td>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>new york</td>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>paris</td>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>paris</td>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>paris</td>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>paris</td>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          day      city  temperature  windspeed   event\n",
       "0  2017-01-01  new york           32          6    Rain\n",
       "1  2017-01-02  new york           36          7   Sunny\n",
       "2  2017-01-03  new york           28         12    Snow\n",
       "3  2017-01-04  new york           33          7   Sunny\n",
       "4  2017-01-01    mumbai           90          5   Sunny\n",
       "5  2017-01-02    mumbai           85         12     Fog\n",
       "6  2017-01-03    mumbai           87         15     Fog\n",
       "7  2017-01-04    mumbai           92          5    Rain\n",
       "8  2017-01-01     paris           45         20   Sunny\n",
       "9  2017-01-02     paris           50         13  Cloudy\n",
       "10 2017-01-03     paris           54          8  Cloudy\n",
       "11 2017-01-04     paris           42         10  Cloudy"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city\n",
       "mumbai      88.50\n",
       "new york    32.25\n",
       "paris       47.75\n",
       "Name: temperature, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city').temperature.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "s = df.groupby(['city', 'day']).temperature.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city      day       \n",
       "mumbai    2017-01-01    90\n",
       "          2017-01-02    85\n",
       "          2017-01-03    87\n",
       "          2017-01-04    92\n",
       "new york  2017-01-01    32\n",
       "          2017-01-02    36\n",
       "          2017-01-03    28\n",
       "          2017-01-04    33\n",
       "paris     2017-01-01    45\n",
       "          2017-01-02    50\n",
       "          2017-01-03    54\n",
       "          2017-01-04    42\n",
       "Name: temperature, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>day</th>\n",
       "      <th>2017-01-01 00:00:00</th>\n",
       "      <th>2017-01-02 00:00:00</th>\n",
       "      <th>2017-01-03 00:00:00</th>\n",
       "      <th>2017-01-04 00:00:00</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mumbai</th>\n",
       "      <td>90</td>\n",
       "      <td>85</td>\n",
       "      <td>87</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>new york</th>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>28</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>paris</th>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>54</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "day       2017-01-01  2017-01-02  2017-01-03  2017-01-04\n",
       "city                                                    \n",
       "mumbai            90          85          87          92\n",
       "new york          32          36          28          33\n",
       "paris             45          50          54          42"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s.unstack()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "day\n",
       "2017-01-01    90\n",
       "2017-01-02    85\n",
       "2017-01-03    87\n",
       "2017-01-04    92\n",
       "Name: temperature, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s.loc['mumbai']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Series([], Name: temperature, dtype: int64)"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s.loc[('Miami', '2017-01-01'), :]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s.loc['mumbai', '2017-01-01']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.set_index(['city', 'day'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th>day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">new york</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">mumbai</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">paris</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     temperature  windspeed   event\n",
       "city     day                                       \n",
       "new york 2017-01-01           32          6    Rain\n",
       "         2017-01-02           36          7   Sunny\n",
       "         2017-01-03           28         12    Snow\n",
       "         2017-01-04           33          7   Sunny\n",
       "mumbai   2017-01-01           90          5   Sunny\n",
       "         2017-01-02           85         12     Fog\n",
       "         2017-01-03           87         15     Fog\n",
       "         2017-01-04           92          5    Rain\n",
       "paris    2017-01-01           45         20   Sunny\n",
       "         2017-01-02           50         13  Cloudy\n",
       "         2017-01-03           54          8  Cloudy\n",
       "         2017-01-04           42         10  Cloudy"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.sort_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th>day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">mumbai</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">new york</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">paris</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     temperature  windspeed   event\n",
       "city     day                                       \n",
       "mumbai   2017-01-01           90          5   Sunny\n",
       "         2017-01-02           85         12     Fog\n",
       "         2017-01-03           87         15     Fog\n",
       "         2017-01-04           92          5    Rain\n",
       "new york 2017-01-01           32          6    Rain\n",
       "         2017-01-02           36          7   Sunny\n",
       "         2017-01-03           28         12    Snow\n",
       "         2017-01-04           33          7   Sunny\n",
       "paris    2017-01-01           45         20   Sunny\n",
       "         2017-01-02           50         13  Cloudy\n",
       "         2017-01-03           54          8  Cloudy\n",
       "         2017-01-04           42         10  Cloudy"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            temperature  windspeed  event\n",
       "day                                      \n",
       "2017-01-01           90          5  Sunny\n",
       "2017-01-02           85         12    Fog\n",
       "2017-01-03           87         15    Fog\n",
       "2017-01-04           92          5   Rain"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc['mumbai']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th>day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mumbai</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   temperature  windspeed  event\n",
       "city   day                                      \n",
       "mumbai 2017-01-01           90          5  Sunny"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[('mumbai', '2017-01-01'), :]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city    day       \n",
       "mumbai  2017-01-01    90\n",
       "        2017-01-03    87\n",
       "Name: temperature, dtype: int64"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[('mumbai', ['2017-01-01', '2017-01-03']), 'temperature']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th>day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">mumbai</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">new york</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">paris</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     temperature  windspeed   event\n",
       "city     day                                       \n",
       "mumbai   2017-01-01           90          5   Sunny\n",
       "         2017-01-03           87         15     Fog\n",
       "new york 2017-01-01           32          6    Rain\n",
       "         2017-01-03           28         12    Snow\n",
       "paris    2017-01-01           45         20   Sunny\n",
       "         2017-01-03           54          8  Cloudy"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[(slice(None), ['2017-01-01', '2017-01-03']), :]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>city</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>new york</td>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>new york</td>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>new york</td>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>new york</td>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         day      city  temperature  windspeed  event\n",
       "0 2017-01-01  new york           32          6   Rain\n",
       "1 2017-01-02  new york           36          7  Sunny\n",
       "2 2017-01-03  new york           28         12   Snow\n",
       "3 2017-01-04  new york           33          7  Sunny\n",
       "4 2017-01-01    mumbai           90          5  Sunny"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_excel(\"weather_cities.xlsx\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th>day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">Boston</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>22</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>38</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>25</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>30</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">Miami</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">Paris</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">Houston</th>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>82</td>\n",
       "      <td>15</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-02</th>\n",
       "      <td>92</td>\n",
       "      <td>20</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-03</th>\n",
       "      <td>101</td>\n",
       "      <td>18</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-04</th>\n",
       "      <td>98</td>\n",
       "      <td>24</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    temperature  windspeed   event\n",
       "city    day                                       \n",
       "Boston  2017-01-01           22          6    Rain\n",
       "        2017-01-02           38          7   Sunny\n",
       "        2017-01-03           25         12    Snow\n",
       "        2017-01-04           30          7   Sunny\n",
       "Miami   2017-01-01           90          5   Sunny\n",
       "        2017-01-02           85         12     Fog\n",
       "        2017-01-03          100         15     Fog\n",
       "        2017-01-04           92          5    Rain\n",
       "Paris   2017-01-01           45         20   Sunny\n",
       "        2017-01-02           50         13  Cloudy\n",
       "        2017-01-03           54          8  Cloudy\n",
       "        2017-01-04           42         10  Cloudy\n",
       "Houston 2017-01-01           82         15   Sunny\n",
       "        2017-01-02           92         20  Cloudy\n",
       "        2017-01-03          101         18    Rain\n",
       "        2017-01-04           98         24  Cloudy"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.set_index(['city', 'day'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\User\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: FutureWarning: using a dict on a Series for aggregation\n",
      "is deprecated and will be removed in a future version\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>avg_temp</th>\n",
       "      <th>median_temp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>85</td>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>92</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>50</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>82</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>92</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>101</td>\n",
       "      <td>101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>98</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    avg_temp  median_temp\n",
       "0         22           22\n",
       "1         38           38\n",
       "2         25           25\n",
       "3         30           30\n",
       "4         90           90\n",
       "5         85           85\n",
       "6        100          100\n",
       "7         92           92\n",
       "8         45           45\n",
       "9         50           50\n",
       "10        54           54\n",
       "11        42           42\n",
       "12        82           82\n",
       "13        92           92\n",
       "14       101          101\n",
       "15        98           98"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(level=0)['temperature'].agg({'avg_temp': np.average, 'median_temp': np.median})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\User\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: FutureWarning: using a dict on a Series for aggregation\n",
      "is deprecated and will be removed in a future version\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>avg_temp</th>\n",
       "      <th>median_temp</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boston</th>\n",
       "      <td>28.75</td>\n",
       "      <td>27.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Houston</th>\n",
       "      <td>93.25</td>\n",
       "      <td>95.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Miami</th>\n",
       "      <td>91.75</td>\n",
       "      <td>91.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Paris</th>\n",
       "      <td>47.75</td>\n",
       "      <td>47.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         avg_temp  median_temp\n",
       "city                          \n",
       "Boston      28.75         27.5\n",
       "Houston     93.25         95.0\n",
       "Miami       91.75         91.0\n",
       "Paris       47.75         47.5"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city')['temperature'].agg({'avg_temp': np.average, 'median_temp': np.median})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">average</th>\n",
       "      <th colspan=\"2\" halign=\"left\">median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boston</th>\n",
       "      <td>28.75</td>\n",
       "      <td>8.00</td>\n",
       "      <td>27.5</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Houston</th>\n",
       "      <td>93.25</td>\n",
       "      <td>19.25</td>\n",
       "      <td>95.0</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Miami</th>\n",
       "      <td>91.75</td>\n",
       "      <td>9.25</td>\n",
       "      <td>91.0</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Paris</th>\n",
       "      <td>47.75</td>\n",
       "      <td>12.75</td>\n",
       "      <td>47.5</td>\n",
       "      <td>11.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            average                median          \n",
       "        temperature windspeed temperature windspeed\n",
       "city                                               \n",
       "Boston        28.75      8.00        27.5       7.0\n",
       "Houston       93.25     19.25        95.0      19.0\n",
       "Miami         91.75      9.25        91.0       8.5\n",
       "Paris         47.75     12.75        47.5      11.5"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('city')['temperature', 'windspeed'].agg({'average': np.average, 'median': np.median})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">average</th>\n",
       "      <th colspan=\"2\" halign=\"left\">median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       average                median          \n",
       "   temperature windspeed temperature windspeed\n",
       "0           32         6          32         6\n",
       "1           36         7          36         7\n",
       "2           28        12          28        12\n",
       "3           33         7          33         7\n",
       "4           90         5          90         5\n",
       "5           85        12          85        12\n",
       "6           87        15          87        15\n",
       "7           92         5          92         5\n",
       "8           45        20          45        20\n",
       "9           50        13          50        13\n",
       "10          54         8          54         8\n",
       "11          42        10          42        10"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(level=0)['temperature', 'windspeed'].agg({'average': np.average, 'median': np.median})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>city</th>\n",
       "      <th>temperature</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>new york</td>\n",
       "      <td>32</td>\n",
       "      <td>6</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>new york</td>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>new york</td>\n",
       "      <td>28</td>\n",
       "      <td>12</td>\n",
       "      <td>Snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>new york</td>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>90</td>\n",
       "      <td>5</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>85</td>\n",
       "      <td>12</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>Fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>mumbai</td>\n",
       "      <td>92</td>\n",
       "      <td>5</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>paris</td>\n",
       "      <td>45</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>paris</td>\n",
       "      <td>50</td>\n",
       "      <td>13</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>paris</td>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>paris</td>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>Cloudy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          day      city  temperature  windspeed   event\n",
       "0  2017-01-01  new york           32          6    Rain\n",
       "1  2017-01-02  new york           36          7   Sunny\n",
       "2  2017-01-03  new york           28         12    Snow\n",
       "3  2017-01-04  new york           33          7   Sunny\n",
       "4  2017-01-01    mumbai           90          5   Sunny\n",
       "5  2017-01-02    mumbai           85         12     Fog\n",
       "6  2017-01-03    mumbai           87         15     Fog\n",
       "7  2017-01-04    mumbai           92          5    Rain\n",
       "8  2017-01-01     paris           45         20   Sunny\n",
       "9  2017-01-02     paris           50         13  Cloudy\n",
       "10 2017-01-03     paris           54          8  Cloudy\n",
       "11 2017-01-04     paris           42         10  Cloudy"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = df.groupby(\"city\")['temperature'].agg([lambda z: np.mean(z), 'size'])\n",
    "a.columns = [\"Maximum\", 'Total']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Maximum</th>\n",
       "      <th>Total</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boston</th>\n",
       "      <td>28.75</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Houston</th>\n",
       "      <td>93.25</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Miami</th>\n",
       "      <td>91.75</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Paris</th>\n",
       "      <td>47.75</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Maximum  Total\n",
       "city                   \n",
       "Boston     28.75      4\n",
       "Houston    93.25      4\n",
       "Miami      91.75      4\n",
       "Paris      47.75      4"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x198e18b8f60>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.clf()\n",
    "df.groupby('city').size().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x198e1a7bba8>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.clf()\n",
    "df.groupby('day')['temperature'].min().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.clf()\n",
    "df.groupby('day')['windspeed'].max().plot(kind='bar')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
